name: OrangeHRM Selenium CI with Maven & Allure
run-name: ${{ github.actor }} is running OrangeHRM Selenium tests üöÄ

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    # --- D·ªãch v·ª• ch·∫°y song song ---
    services:
      # ƒê·∫∑t t√™n cho service, v√≠ d·ª• 'db'
      db:
        # S·ª≠ d·ª•ng image MariaDB (ho·∫∑c mysql)
        image: mariadb:10.11 # *** THAY ƒê·ªîI: Ch·ªçn phi√™n b·∫£n ph√π h·ª£p v·ªõi OrangeHRM c·ªßa b·∫°n ***
        env:
          MYSQL_ROOT_PASSWORD: test_root_password # M·∫≠t kh·∫©u root (ch·ªâ d√πng cho test)
          MYSQL_DATABASE: test_orangehrm_db       # T√™n database s·∫Ω ƒë∆∞·ª£c t·∫°o
          MYSQL_USER: test_orangehrm_user         # User ƒë·ªÉ OrangeHRM k·∫øt n·ªëi
          MYSQL_PASSWORD: test_password           # M·∫≠t kh·∫©u cho user tr√™n
        ports:
          - 3306:3306 # Map port ƒë·ªÉ c√≥ th·ªÉ truy c·∫≠p t·ª´ runner n·∫øu c·∫ßn
        # Options ƒë·ªÉ ki·ªÉm tra s·ª©c kh·ªèe DB tr∆∞·ªõc khi job b·∫Øt ƒë·∫ßu ch·∫°y c√°c step sau
        options: >-
          --health-cmd "mysqladmin ping -h localhost -P 3306 -u root -p$MYSQL_ROOT_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: üõí Checkout Test Code
        uses: actions/checkout@v4

      # --- C√†i ƒë·∫∑t M√¥i tr∆∞·ªùng C·∫ßn Thi·∫øt ---
      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' # ƒê·∫£m b·∫£o kh·ªõp v·ªõi pom.xml
          distribution: 'temurin'
          cache: 'maven' # Cache dependencies Maven

      - name: üêò Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1' # *** THAY ƒê·ªîI: Ch·ªçn phi√™n b·∫£n PHP t∆∞∆°ng th√≠ch OrangeHRM ***
          extensions: gd, zip, mysql, intl, ldap, soap, xml # *** THAY ƒê·ªîI: C√°c extension PHP c·∫ßn thi·∫øt cho OrangeHRM ***
          tools: composer # N·∫øu c·∫ßn composer

      - name: üê¨ Install MySQL Client
        run: sudo apt-get update && sudo apt-get install -y default-mysql-client

      - name: üêò Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.9 # *** THAY ƒê·ªîI: N·∫øu b·∫°n d√πng phi√™n b·∫£n Maven kh√°c ***

      # --- Chu·∫©n b·ªã OrangeHRM ---
      - name: üì• Download and Extract OrangeHRM
        run: |
          echo "Downloading OrangeHRM..."
          # *** THAY TH·∫æ B·∫∞NG L·ªÜNH T·∫¢I V√Ä GI·∫¢I N√âN PHI√äN B·∫¢N ORANGEHRM C·ª¶A B·∫†N ***
          # V√≠ d·ª•:
          # wget https://excellmedia.dl.sourceforge.net/project/orangehrm/stable/5.7/orangehrm-5.7.zip -O orangehrm.zip
          # unzip orangehrm.zip -d ./orangehrm_src
          # Ho·∫∑c n·∫øu source c√≥ s·∫µn trong repo test:
          # mkdir ./orangehrm_src && cp -r path/to/your/orangehrm/. ./orangehrm_src
          echo "OrangeHRM source prepared in ./orangehrm_src"
          # *** THAY ƒê·ªîI: X√°c ƒë·ªãnh th∆∞ m·ª•c web root th·ª±c t·∫ø c·ªßa OrangeHRM (quan tr·ªçng!) ***
          # V√≠ d·ª•, v·ªõi m·ªôt s·ªë phi√™n b·∫£n, n√≥ c√≥ th·ªÉ l√† ./orangehrm_src/web ho·∫∑c ./orangehrm_src/public
          echo "ORANGEHRM_WEBROOT=./orangehrm_src/web" >> $GITHUB_ENV # Thay ƒë·ªïi path n·∫øu c·∫ßn

      - name: DEBUG - List OrangeHRM files
        run: |
          echo "OrangeHRM Source Root (Parent of Webroot):"
          ls -la ${{ env.ORANGEHRM_WEBROOT }}/..
          echo "OrangeHRM Webroot:"
          ls -la ${{ env.ORANGEHRM_WEBROOT }}
          # Ki·ªÉm tra th√™m th∆∞ m·ª•c c·ª• th·ªÉ n·∫øu c·∫ßn
          # if [ -d "${{ env.ORANGEHRM_WEBROOT }}/../lib/confs" ]; then
          #   echo "OrangeHRM lib/confs:"
          #   ls -la ${{ env.ORANGEHRM_WEBROOT }}/../lib/confs
          # fi
      # --- C·∫•u h√¨nh K·∫øt n·ªëi Database cho OrangeHRM ---
      - name: ‚öôÔ∏è Configure OrangeHRM Database Connection
        env:
          DB_HOST: db       # T√™n service database ƒë√£ ƒë·ªãnh nghƒ©a ·ªü tr√™n
          DB_PORT: 3306     # Port c·ªßa service database
          DB_NAME: test_orangehrm_db
          DB_USER: test_orangehrm_user
          DB_PASS: test_password
        run: |
          echo "Configuring OrangeHRM database connection..."
          # *** THAY ƒê·ªîI ƒê∆Ø·ªúNG D·∫™N N√ÄY CHO ƒê√öNG V·ªöI PHI√äN B·∫¢N ORANGEHRM C·ª¶A B·∫†N ***
          # ƒê∆∞·ªùng d·∫´n ƒë·∫øn file config g·ªëc v√† file config s·∫Ω s·ª≠ d·ª•ng
          # V√≠ d·ª• cho m·ªôt s·ªë phi√™n b·∫£n c≈© h∆°n:
          # CONFIG_TEMPLATE="${{ env.ORANGEHRM_WEBROOT }}/../lib/confs/Conf.php-distribution"
          # CONFIG_TARGET="${{ env.ORANGEHRM_WEBROOT }}/../lib/confs/Conf.php"
          # V√≠ d·ª• cho c√°c phi√™n b·∫£n m·ªõi h∆°n d√πng .env:
          CONFIG_TEMPLATE="${{ env.ORANGEHRM_WEBROOT }}/../.env.example" # Ho·∫∑c t√™n file t∆∞∆°ng t·ª±
          CONFIG_TARGET="${{ env.ORANGEHRM_WEBROOT }}/../.env"

          if [ ! -f "$CONFIG_TEMPLATE" ]; then
            echo "ERROR: OrangeHRM config template/example not found at $CONFIG_TEMPLATE"
            exit 1
          fi

          cp "$CONFIG_TEMPLATE" "$CONFIG_TARGET"

          # S·ª≠ d·ª•ng sed ƒë·ªÉ thay th·∫ø c√°c gi√° tr·ªã placeholder b·∫±ng gi√° tr·ªã t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
          # *** C√ÅC KH√ìA ('DB_HOST', 'DB_USERNAME', ...) C√ì TH·ªÇ KH√ÅC NHAU GI·ªÆA C√ÅC PHI√äN B·∫¢N ***
          # Ki·ªÉm tra file .env.example ho·∫∑c Conf.php-distribution c·ªßa b·∫°n
          sed -i "s/^DB_HOST=.*/DB_HOST=$DB_HOST/g" "$CONFIG_TARGET"
          sed -i "s/^DB_PORT=.*/DB_PORT=$DB_PORT/g" "$CONFIG_TARGET"
          sed -i "s/^DB_DATABASE=.*/DB_DATABASE=$DB_NAME/g" "$CONFIG_TARGET"
          sed -i "s/^DB_USERNAME=.*/DB_USERNAME=$DB_USER/g" "$CONFIG_TARGET"
          sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=$DB_PASS/g" "$CONFIG_TARGET"
          # C√≥ th·ªÉ c·∫ßn thay ƒë·ªïi c√°c c·∫•u h√¨nh kh√°c n·∫øu c·∫ßn (APP_URL, etc.)

          echo "OrangeHRM configuration file ($CONFIG_TARGET) updated:"
          cat "$CONFIG_TARGET" # In ra ƒë·ªÉ ki·ªÉm tra

      # --- Kh·ªüi t·∫°o Schema Database ---
      - name: üíæ Initialize Database Schema
        env:
          DB_HOST: db
          DB_NAME: test_orangehrm_db
          DB_USER: test_orangehrm_user
          DB_PASS: test_password
        run: |
          echo "Waiting for database service to be fully ready..."
          sleep 15 # ƒê·ª£i DB kh·ªüi ƒë·ªông ho√†n to√†n

          echo "Initializing database schema..."
          # *** B·∫†N C·∫¶N C√ì FILE SQL ƒê·ªÇ T·∫†O SCHEMA HO·∫∂C D√ôNG L·ªÜNH ARTISAN/CONSOLE C·ª¶A ORANGEHRM ***
          # C√°ch 1: D√πng file SQL (n·∫øu c√≥)
          # THAY TH·∫æ 'path/to/your/orangehrm_db_script.sql' B·∫∞NG ƒê∆Ø·ªúNG D·∫™N ƒê√öNG
          # SCHEMA_SCRIPT_PATH="path/to/your/orangehrm_db_script.sql"
          # if [ -f "$SCHEMA_SCRIPT_PATH" ]; then
          #   mysql -h $DB_HOST -u $DB_USER -p$DB_PASS $DB_NAME < "$SCHEMA_SCRIPT_PATH"
          #   echo "Database schema initialized from SQL script."
          # else
          #   echo "WARNING: SQL schema script not found at $SCHEMA_SCRIPT_PATH. Trying console command..."
          # fi

          # C√°ch 2: D√πng l·ªánh console c·ªßa OrangeHRM (ph·ªï bi·∫øn h∆°n v·ªõi c√°c phi√™n b·∫£n m·ªõi d·ª±a tr√™n Symfony/Laravel)
          # C·∫ßn cd v√†o th∆∞ m·ª•c g·ªëc c·ªßa OrangeHRM (n∆°i c√≥ file 'symfony' ho·∫∑c 'artisan')
          ORANGEHRM_ROOT=$(dirname "${{ env.ORANGEHRM_WEBROOT }}") # Th∆∞ m·ª•c cha c·ªßa webroot
          cd $ORANGEHRM_ROOT
          # L·ªánh migrate c√≥ th·ªÉ kh√°c nhau, ki·ªÉm tra t√†i li·ªáu OrangeHRM
          # C√≥ th·ªÉ c·∫ßn ch·∫°y composer install tr∆∞·ªõc n·∫øu ch∆∞a c√≥ vendor
          # composer install --no-dev --optimize-autoloader
          php symfony doctrine:schema:create --no-interaction || php bin/console doctrine:schema:create --no-interaction || php artisan migrate --seed --force
          # `--no-interaction` ho·∫∑c `--force` ƒë·ªÉ ch·∫°y kh√¥ng c·∫ßn h·ªèi x√°c nh·∫≠n
          echo "Database schema initialized using OrangeHRM console command."
          cd $GITHUB_WORKSPACE # Quay l·∫°i th∆∞ m·ª•c g·ªëc c·ªßa workflow

      # --- Ch·∫°y OrangeHRM ---
      - name: ‚ñ∂Ô∏è Start OrangeHRM using PHP Built-in Server
        run: |
          echo "Starting OrangeHRM server..."
          # Ch·∫°y ng·∫ßm v√† chuy·ªÉn h∆∞·ªõng output
          # ƒê·∫£m b·∫£o -t tr·ªè ƒë√∫ng v√†o th∆∞ m·ª•c web root c·ªßa OrangeHRM
          nohup php -S 0.0.0.0:8080 -t ${{ env.ORANGEHRM_WEBROOT }} > /tmp/orangehrm.log 2>&1 &
          sleep 10 # ƒê·ª£i server kh·ªüi ƒë·ªông k·ªπ h∆°n
          echo "Checking if OrangeHRM is running..."
          # Ki·ªÉm tra trang login ho·∫∑c trang ch·ªß
          curl -I --fail http://localhost:8080/ || (echo "Failed to start OrangeHRM or it returned an error"; cat /tmp/orangehrm.log; exit 1)
          echo "OrangeHRM seems to be running on http://localhost:8080"

      # --- Set up WebDriver ---
      - name: üåê Setup ChromeDriver
        uses: nanasess/setup-chromedriver@v2
        # Action n√†y s·∫Ω t·ª± ƒë·ªông t·∫£i ChromeDriver ph√π h·ª£p v√† th√™m v√†o PATH

      # --- Ch·∫°y Tests ---
      - name: üß™ Run TestNG Tests with Maven
        env:
          # Truy·ªÅn URL c·ªßa OrangeHRM ƒëang ch·∫°y v√†o m√¥i tr∆∞·ªùng test
          SELENIUM_BASE_URL: http://localhost:8080
          # Truy·ªÅn th√¥ng tin DB n·∫øu test c·∫ßn truy c·∫≠p tr·ª±c ti·∫øp (t√πy ch·ªçn)
          TEST_DB_HOST: db
          TEST_DB_PORT: 3306
          TEST_DB_NAME: test_orangehrm_db
          TEST_DB_USER: test_orangehrm_user
          TEST_DB_PASS: test_password
        run: |
          echo "Running Selenium tests against $SELENIUM_BASE_URL"
          # Truy·ªÅn URL v√† th√¥ng tin DB (n·∫øu c·∫ßn) qua system properties
          mvn clean test -Dsurefire.useFile=false --batch-mode \
            -Dselenium.base.url=$SELENIUM_BASE_URL \
            -Dtest.db.host=$TEST_DB_HOST \
            -Dtest.db.port=$TEST_DB_PORT \
            -Dtest.db.name=$TEST_DB_NAME \
            -Dtest.db.user=$TEST_DB_USER \
            -Dtest.db.pass=$TEST_DB_PASS

      # --- C√°c b∆∞·ªõc b√°o c√°o (gi·ªØ nguy√™n t·ª´ file g·ªëc c·ªßa b·∫°n) ---
      - name: üìä Generate Allure Report
        if: always() # Lu√¥n ch·∫°y b∆∞·ªõc n√†y ngay c·∫£ khi test th·∫•t b·∫°i
        run: |
          mvn allure:report -q

      - name: ‚òÅÔ∏è Upload Allure HTML Report Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-html
          path: target/site/allure-maven-plugin/

      - name: üìÑ Upload Raw Test Reports Artifact (Surefire)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-surefire
          path: target/surefire-reports/

      - name: üåê Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4 # S·ª≠ d·ª•ng v4 m·ªõi nh·∫•t
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/allure-maven-plugin/
          publish_branch: gh-pages # Nh√°nh ƒë·ªÉ deploy report
          force_orphan: true # T·∫°o nh√°nh m·ªõi ho√†n to√†n m·ªói l·∫ßn deploy (tr√°nh l·ªói merge)

      - name: üîó Print Allure Report URL
        if: always()
        run: |
          # L·∫•y t√™n repo v√† owner t·ª´ context
          REPO_OWNER=$(echo '${{ github.repository }}' | cut -d'/' -f1)
          REPO_NAME=$(echo '${{ github.repository }}' | cut -d'/' -f2)
          echo "üîó Allure Report deployed to: https://${REPO_OWNER}.github.io/${REPO_NAME}/"

